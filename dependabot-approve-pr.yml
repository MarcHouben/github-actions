# Automatically approves and merges Dependabot pull requests for patch and minor updates
name: Dependabot Auto-Approval

on:
  pull_request:
    types: [ opened, synchronize, reopened ]

# Minimal permissions following principle of least privilege
permissions:
  contents: write
  pull-requests: write

jobs:
  dependabot-auto-approve:
    # Only run for Dependabot PRs
    if: github.actor == 'dependabot[bot]'
    runs-on: ubuntu-latest

    steps:
    - name: Fetch Dependabot metadata
      id: metadata
      uses: dependabot/fetch-metadata@v2
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        alert-lookup: true
        compat-lookup: true

    - name: Debug - Show dependency metadata
      run: |
        echo "üîç DEBUG INFORMATION:"
        echo "dependency-type: ${{ steps.metadata.outputs.dependency-type }}"
        echo "update-type: ${{ steps.metadata.outputs.update-type }}"
        echo "dependency-names: ${{ steps.metadata.outputs.dependency-names }}"
        echo "package-ecosystem: ${{ steps.metadata.outputs.package-ecosystem }}"
        echo ""

    - name: Add labels based on dependency type
      run: |
        echo "üìù LABEL ASSIGNMENT DEBUG:"
        echo "dependency-type value: '${{ steps.metadata.outputs.dependency-type }}'"

        labels=""
        if [[ "${{ steps.metadata.outputs.dependency-type }}" == "direct:production" ]]; then
          labels="production"
          echo "‚úì Adding 'production' label (dependency-type: direct:production)"
        elif [[ "${{ steps.metadata.outputs.dependency-type }}" == "direct:development" ]]; then
          labels="development"
          echo "‚úì Adding 'development' label (dependency-type: direct:development)"
        else
          echo "‚Ñπ No dependency-type label added (dependency-type: '${{ steps.metadata.outputs.dependency-type }}')"
        fi

        if [[ "${{ steps.metadata.outputs.update-type }}" == "version-update:semver-patch" ]]; then
          labels="${labels} patch"
          echo "‚úì Adding 'patch' label (update-type: version-update:semver-patch)"
        elif [[ "${{ steps.metadata.outputs.update-type }}" == "version-update:semver-minor" ]]; then
          labels="${labels} minor"
          echo "‚úì Adding 'minor' label (update-type: version-update:semver-minor)"
        elif [[ "${{ steps.metadata.outputs.update-type }}" == "version-update:semver-major" ]]; then
          labels="${labels} major"
          echo "‚úì Adding 'major' label (update-type: version-update:semver-major)"
        else
          echo "‚Ñπ No update-type label added (update-type: '${{ steps.metadata.outputs.update-type }}')"
        fi

        # Trim leading/trailing spaces
        labels=$(echo "$labels" | xargs)

        echo ""
        echo "üè∑Ô∏è Final labels to apply: '$labels'"

        if [[ -n "$labels" ]]; then
          echo "Applying labels to PR #$PR_NUMBER..."
          gh pr edit "$PR_NUMBER" --add-label "$labels"
          echo "‚úÖ Labels successfully applied!"
        else
          echo "‚ö†Ô∏è No labels to apply"
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        PR_NUMBER: ${{ github.event.pull_request.number }}

    - name: Auto-approve patch and minor updates
      if: |
        steps.metadata.outputs.update-type == 'version-update:semver-patch' || 
        steps.metadata.outputs.update-type == 'version-update:semver-minor'
      run: |
        echo "Auto-approving ${{ steps.metadata.outputs.update-type }} update for ${{ steps.metadata.outputs.dependency-names }}"
        gh pr review "$PR_NUMBER" --approve --body "‚úÖ Auto-approved ${{ steps.metadata.outputs.update-type }} dependency update"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        PR_NUMBER: ${{ github.event.pull_request.number }}

    - name: Enable auto-merge for approved updates
      if: |
        steps.metadata.outputs.update-type == 'version-update:semver-patch' || 
        steps.metadata.outputs.update-type == 'version-update:semver-minor'
      run: |
        echo "Enabling auto-merge for approved update..."
        gh pr merge "$PR_NUMBER" --auto --squash
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        PR_NUMBER: ${{ github.event.pull_request.number }}

    - name: Comment on major updates
      if: steps.metadata.outputs.update-type == 'version-update:semver-major'
      run: |
        gh pr comment "$PR_NUMBER" --body "üö® **Major version update detected**

        This PR contains a major version update for \`${{ steps.metadata.outputs.dependency-names }}\` which may include breaking changes.

        **Please review carefully before merging:**
        - Check the changelog/release notes
        - Verify compatibility with existing code
        - Run comprehensive tests

        This PR will not be auto-merged and requires manual review."
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        PR_NUMBER: ${{ github.event.pull_request.number }}

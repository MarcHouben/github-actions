name: Deploy website
on:
  push:
    branches:
    - main
jobs:
  test:
    # job 1
    runs-on: ubuntu-latest # runner machine 1
    steps:
    - name: Get code
      uses: actions/checkout@v4
    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: ~/.npm # This is the npm cache folder
        key: deps-node-modules-${{ hashFiles('**/package-lock.json') }} # Key of the cache to retrieve the cache
    - name: Install dependencies
      run: npm ci
    - name: Lint code
      run: npm run lint
    - name: Test code
      run: npm run test
  build:
    # job 2 (will create a dist folder with files)
    needs: test # depends on job 1
    runs-on: ubuntu-latest # runner machine 2
    outputs:
      # Setting output for the overall job
      script-file: ${{ steps.publish.outputs.script-file2 }} # Used in line 42
    steps:
    - name: Get code
      uses: actions/checkout@v4
    - name: Cache dependencies # This step must be executed before installing dependencies
      uses: actions/cache@v4
      with:
        path: ~/.npm
        key: deps-node-modules-${{ hashFiles('**/package-lock.json') }} # The last part makes the key name dynamic
    - name: Install dependencies
      run: npm ci
    - name: Build website
      run: npm run build
    - name: Publish JS filename # This will output the name of the JS file in the dist/assets folder
      id: publish # id is used to reference this step in the outputs (line 27)
      run: find dist/assets/*.js -type f -execdir echo 'script-file2={}' >> $GITHUB_OUTPUT ';'
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        # Additional information
        name: dist-files # identifier for the artifact
        path: dist
        # path: |
        #   dist
        #   package.json
  deploy:
    # job 3
    needs: build # depends on job 2
    runs-on: ubuntu-latest # runner machine 3
    steps:
    - name: Get build artifacts
      uses: actions/download-artifact@v4
      with:
        name: dist-files # identifier for the artifact
    - name: Output contents # The files that were in the dist folder 
      run: ls # will directly be available here
    - name: Output filename
      run: echo "${{ needs.build.outputs.script-file }}" # script-file is defined at line 27
    - name: Deploy
      run: echo "Deploying..."
